/* console.log('================================ Замыкание ================================')
//§ЗАМЫКАНИЕ https://developer.mozilla.org/ru/docs/Web/JavaScript/Closures

//Функция замкнута в своем лексическом окружении
function makeClosure() {
    let myName = 'Anton'
    return function showName() {
        console.log(myName)
    }
}

let getMyName = makeClosure()
console.log(getMyName())
 */



/* 
//§ Метод bind()
let user = {
    firstName: "Вася",
    sayHi() {
        console.log(`Привет, ${this.firstName}!`);

    }
}
// вот так контекст потеряется
setTimeout(user.sayHi, 1000); // Привет, undefined!

// а так не потеряется (метод bind)
setTimeout(user.sayHi.bind(user), 1000); // Привет, Вася!

 // и так не потеряется (анонимная стрелочная функция)
setTimeout(()=>user.sayHi(), 1000); // Привет, Вася!

 */

/*
? 1) Что такое Scope?
    * Scope - область в переводе (видимости)
? 2) Что такое лексическое окружение?
? 3) Что такое замыкание?
    * Замыкание - это комбинация функции и лексического окружения в котором она былп определена.
    *Замыкание дает доступ к внешнему из внутреннего. Замыкание создается каждый раз когда когда создается функция.
    *Функция как-бы замыкатся в своем лексическом окружении
? 4) Что такое callback?
? 5) В чем отличие var, let, const?
? 6) Для чего нужен метод bind()?
    *При передаче методов объекта в качестве колбэков, например для setTimeout, возникает известная проблема – потеря this.
    *Нужен чтобы фиксить это

*/
